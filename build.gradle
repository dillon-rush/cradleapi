plugins {
	id "com.jfrog.artifactory" version '4.15.1' apply false
}

ext {
	slf4j_version = '1.7.26'
	jackson_version = '2.9.7'

	sharedDir = file("${project.rootDir}/shared")
}

subprojects {
	repositories {
		jcenter()
	}
	
	apply plugin: 'java-library'
	apply plugin: 'maven'
	apply plugin: 'com.jfrog.artifactory'
	apply plugin: 'maven-publish'
	
	defaultTasks 'build'
	
	sourceCompatibility = 1.8 //Java version compatibility to use when compiling Java source.
	targetCompatibility = 1.8 //Java version to generate classes for.
	compileJava.options.debugOptions.debugLevel = 'source,lines,vars' // Include debug information

	version = release_version
	group   = 'com.exactpro.th2'
	
	jar {
		manifest {
			attributes(
					'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
					'Specification-Title':      '',
					'Specification-Vendor':     'Exactpro Systems LLC',
					'Implementation-Title':     project.archivesBaseName,
					'Implementation-Vendor':    'Exactpro Systems LLC',
					'Implementation-Vendor-Id': 'com.exactpro',
					'Implementation-Version':   project.version,
					'Implementation-Version-Date': getDate()
			)
		}
	}

	java {
		withJavadocJar()
		withSourcesJar()
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
			}
		}

		repositories {
			maven {
				name = 'localRepo'
				url = sharedDir
			}
		}
	}

	artifactory {
		publish {
			contextUrl = "${artifactory_url}"
			repository {
				repoKey = "${artifactory_deploy_repo_key}" // The Artifactory repository key to publish to
				username = "${artifactory_user}" // The publisher user name
				password = "${artifactory_password}" // The publisher password
			}
			defaults {
				// Reference to Gradle publications defined in the build script.
				// This is how we tell the Artifactory Plugin which artifacts should be
				// published to Artifactory.
				publications('mavenJava')
				publishArtifacts = true
				publishBuildInfo = true
				// Properties to be attached to the published artifacts.
				publishPom = true
			}
		}
	}
}

static def getDate() {
	def date = new Date()
	def formattedDate = date.format('yyyyMMdd-HH:mm:ss.SSS')
	return formattedDate
}