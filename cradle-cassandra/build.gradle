import org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory

ext {
    driver_version = '4.2.0'
}

sourceSets {
	main.java.srcDirs += "build/generated/sources/annotationProcessor/java/main"
	main.java.srcDirs += "src/main/generated/"
}

task mainGenerator(type: JavaExec) {
	classpath = sourceSets.main.compileClasspath
	main = 'com.exactpro.cradle.cassandra.dao.Main'
}

compileJava.dependsOn mainGenerator

dependencies {
	compile project(":dao-module")
	compile project(":dao-generator")
	compile "com.datastax.oss:java-driver-core:${driver_version}"
	compile "com.datastax.oss:java-driver-query-builder:${driver_version}"
	compile "com.datastax.oss:java-driver-mapper-processor:${driver_version}"
	compile "com.datastax.oss:java-driver-mapper-runtime:${driver_version}"

	annotationProcessor "com.datastax.oss:java-driver-mapper-processor:${driver_version}"

	testCompile 'org.testng:testng:7.1.0'
}

def gen_dir = 'build/generated/sources/annotationProcessor/main'
sourceSets.main.java.srcDirs += [gen_dir]

compileJava {
	options.annotationProcessorGeneratedSourcesDirectory = file("${projectDir}/${gen_dir}")
}

test {
	useTestNG()
}

jar {
	manifest {
		attributes("Specification-Title": "Cradle Cassandra")
	}
}